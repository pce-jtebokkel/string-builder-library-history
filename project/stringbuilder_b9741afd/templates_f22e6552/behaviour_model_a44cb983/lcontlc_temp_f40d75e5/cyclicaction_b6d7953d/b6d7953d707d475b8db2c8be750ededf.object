{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)b6d7953d-707d-475b-8db2-c8be750ededf","ParentGuid":"(Guid)f40d75e5-5d45-48c3-847e-f39b92255ca9","Name":"(string)CyclicAction","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string){analysis -2} \n/// The CyclicAction is running until either ``xComplete`` is ``TRUE`` or ``iErrorID`` ≠  0 (Zero).\n/// If ``xComplete`` is ``TRUE`` or ``iErrorID`` ≠  0 (Zero) the state |STATE.CLEANING| is reached.\n/// With ``itfTimingController`` ≠  0 (Zero) it is possible to check the current invocation time (see: |ITimingController.ControllerCheckTiming|).\n/// Function blocks with a ``udiTimeLimit`` input variable (see: |IETrigTl|, |IETrigATl|, |IETrigTlTo|, |IETrigATlTo|, |ILConTl|, |ILConTlTo|, |ILConTlC|)\n/// should be implement in such a way that the current invocation is exited when the consumed time for this invocation has exceeded the settings from udiTimeLimit.\n///\n/// .. admonition:: Example\n///\n///     .. code-block:: codesys\n///     \n///         REPEAT\n///             // working to reach the ready condition\n///             // ⇒ xComplete := TRUE\n///             // if the maximum invocation time is reached\n///             // ⇒ xTimeLimit := TRUE\n///             // if the maximum operating time is reached\n///             // ⇒ xTimeOut := TRUE\n///             // if an error condition is reached\n///             // ⇒ set iErrorID to a value other than 0 (Zero)\n///             itfTimingController.ControllerCheckTiming(\n///                 xTimeOut=>xTimeOut,\n///                 xTimeLimit=>xTimeLimit\n///             );\n///         \n///             xComplete := TRUE;\n///             iErrorID := ERROR.NO_ERROR;\n///     \n///         UNTIL xComplete OR\n///               xTimeOut OR xTimeLimit OR\n///               iErrorID <> ERROR.NO_ERROR\n///         END_REPEAT\n///\n/// .. note::\n///\n///    If this method will not provide any implementation, please remove it!\n","LineInfoPersistence":"(string)b6d7953d-707d-475b-8db2-c8be750ededf_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)METHOD CyclicAction\nVAR_INPUT\n    itfTimingController : CBML.ITimingController;\nEND_VAR\nVAR_OUTPUT\n    xComplete : BOOL := TRUE;\n    iErrorID : INT := 0;\nEND_VAR\n","LineInfoPersistence":"(string)b6d7953d-707d-475b-8db2-c8be750ededf_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}